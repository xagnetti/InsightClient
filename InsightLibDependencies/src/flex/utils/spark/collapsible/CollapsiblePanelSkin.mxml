<?xml version="1.0" encoding="utf-8"?>
<!--- The skin class for a Spark Panel container that supports resizing the panel.

@see spark.components.Panel
-->
<s:SparkSkin xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    width.collapsed="30"
    alpha.disabled="0.5"
    alpha.disabledWithControlBar="0.5"
    blendMode="normal"
    mouseEnabled="false"
    >

    <fx:Metadata>
        <![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Panel")]
		]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling"
        >
        <![CDATA[
            /* Define the skin elements that should not be colorized.
            For panel, border and title background are skinned, but the content area and title text are not. */
            static private const exclusions : Array = [ "background", "titleDisplay", "contentGroup", "controlBarGroup" ];

            /**
             * @private
             */
            override public function get colorizeExclusions() : Array
            {
                return exclusions;
            }

            /**
             * @private
             */
            override protected function initializationComplete() : void
            {
                useChromeColor = true;
                super.initializationComplete();
            }

            /**
             * @private
             */
            override protected function updateDisplayList( unscaledWidth : Number, unscaledHeight : Number ) : void
            {
                if ( getStyle( "borderVisible" ) == true )
                {
                    border.visible = true;
                    background.left = background.top = background.right = background.bottom = 1;
                    contents.left = contents.top = contents.right = contents.bottom = 1;
                }
                else
                {
                    border.visible = false;
                    background.left = background.top = background.right = background.bottom = 0;
                    contents.left = contents.top = contents.right = contents.bottom = 0;
                }

                dropShadow.visible = getStyle( "dropShadowVisible" );

                var cr : Number = getStyle( "cornerRadius" );
                var withControls : Boolean = ( currentState == "disabledWithControlBar" || currentState == "normalWithControlBar" );

                if ( cornerRadius != cr )
                {
                    cornerRadius = cr;

                    dropShadow.tlRadius = cornerRadius;
                    dropShadow.trRadius = cornerRadius;
                    dropShadow.blRadius = withControls ? cornerRadius : 0;
                    dropShadow.brRadius = withControls ? cornerRadius : 0;

                    setPartCornerRadii( topMaskRect, withControls );
                    setPartCornerRadii( border, withControls );
                    setPartCornerRadii( background, withControls );
                }

                if ( bottomMaskRect )
                    setPartCornerRadii( bottomMaskRect, withControls );

                borderStroke.color = getStyle( "borderColor" );
                borderStroke.alpha = getStyle( "borderAlpha" );
                backgroundFill.color = getStyle( "backgroundColor" );
                backgroundFill.alpha = getStyle( "backgroundAlpha" );

                super.updateDisplayList( unscaledWidth, unscaledHeight );
            }

            /**
             * @private
             */
            private function setPartCornerRadii( target : Rect, includeBottom : Boolean ) : void
            {
                target.topLeftRadiusX = cornerRadius;
                target.topRightRadiusX = cornerRadius;
                target.bottomLeftRadiusX = includeBottom ? cornerRadius : 0;
                target.bottomRightRadiusX = includeBottom ? cornerRadius : 0;
            }

            private var cornerRadius : Number;

            private var collapsed : Boolean = false;

            protected function arrowClicked( event : MouseEvent ) : void
            {
                collapsed = !collapsed;
                currentState = collapsed ? "collapsed" : "normal";
            }
        ]]>

    </fx:Script>

    <s:states>
        <s:State name="collapsed"
            />
        <s:State name="normal"
            />
        <s:State name="disabled"
            />
        <s:State name="normalWithControlBar"
            stateGroups="withControls"
            />
        <s:State name="disabledWithControlBar"
            stateGroups="withControls"
            />
    </s:states>

    <!-- drop shadow can't be hittable so it stays sibling of other graphics -->
    <!--- @private -->
    <s:RectangularDropShadow id="dropShadow"
        bottom="0"
        bottom.collapsed="0"
        color="#000000"
        left="0"
        left.collapsed="0"
        right="0"
        right.collapsed="216"
        top="0"
        top.collapsed="0"
        alpha="0.32"
        angle="90"
        blurX="20"
        blurY="20"
        distance="11"
        />

    <!-- drop shadow can't be hittable so all other graphics go in this group -->
    <s:Group x.collapsed="0"
        bottom="0"
        bottom.collapsed="0"
        left.disabled="0"
        left.disabledWithControlBar="0"
        left.normal="0"
        left.normalWithControlBar="0"
        right.disabled="0"
        right.disabledWithControlBar="0"
        right.normal="0"
        right.normalWithControlBar="0"
        top="0"
        top.collapsed="0"
        >

        <!-- top group mask -->
        <!--- @private -->
        <s:Group id="topGroupMask"
            bottom="1"
            left="1"
            right="1"
            top="1"
            >
            <!--- @private -->
            <s:Rect id="topMaskRect"
                bottom="0"
                left="0"
                right="0"
                top="0"
                >
                <s:fill>
                    <s:SolidColor alpha="0"
                        />
                </s:fill>
            </s:Rect>
        </s:Group>

        <!-- bottom group mask -->
        <!--- @private -->
        <s:Group id="bottomGroupMask"
            bottom="1"
            left="1"
            right="1"
            top="1"
            includeIn="normalWithControlBar, disabledWithControlBar"
            >
            <!--- @private -->
            <s:Rect id="bottomMaskRect"
                bottom="0"
                left="0"
                right="0"
                top="0"
                >
                <s:fill>
                    <s:SolidColor alpha="0"
                        />
                </s:fill>
            </s:Rect>
        </s:Group>

        <!-- layer 1: border -->
        <!--- @private -->
        <s:Rect id="border"
            bottom="0"
            left="0"
            right="0"
            top="0"
            >
            <s:stroke>
                <!--- @private -->
                <s:SolidColorStroke id="borderStroke"
                    weight="1"
                    />
            </s:stroke>
        </s:Rect>

        <!-- layer 2: background fill -->
        <!--- Defines the appearance of the PanelSkin class's background. -->
        <s:Rect id="background"
            bottom="1"
            left="1"
            right="1"
            top="1"
            includeIn="disabled,disabledWithControlBar,normal,normalWithControlBar"
            >
            <s:fill>
                <!--- @private
                Defines the  PanelSkin class's background fill. The default color is 0xFFFFFF. -->
                <s:SolidColor id="backgroundFill"
                    color="#FFFFFF"
                    />
            </s:fill>
        </s:Rect>

        <!-- layer 3: contents -->
        <!--- Contains the vertical stack of titlebar content and controlbar. -->
        <s:Group id="contents"
            bottom="1"
            left="1"
            right="5"
            top="1"
            >
            <s:layout>
                <s:VerticalLayout horizontalAlign="justify"
                    gap="0"
                    />
            </s:layout>

            <!--- @private -->
            <s:Group id="topGroup"
                width.collapsed="33"
                height.collapsed="100%"
                mask="{topGroupMask}"
                >

                <!-- layer 0: title bar fill -->
                <!--- @private -->
                <s:Rect id="tbFill"
                    height.collapsed="100%"
                    bottom.disabled="1"
                    bottom.disabledWithControlBar="1"
                    bottom.normal="1"
                    bottom.normalWithControlBar="1"
                    left="0"
                    left.collapsed="0"
                    right="0"
                    right.collapsed="0"
                    top="0"
                    top.collapsed="0"
                    >
                    <s:fill>
                        <s:LinearGradient rotation="90"
                            >
                            <s:GradientEntry color="0xE2E2E2"
                                />
                            <s:GradientEntry color="0xD9D9D9"
                                />
                        </s:LinearGradient>
                    </s:fill>
                </s:Rect>

                <!-- layer 1: title bar highlight -->
                <!--- @private -->
                <s:Rect id="tbHilite"
                    bottom="0"
                    bottom.collapsed="0"
                    left="0"
                    left.collapsed="0"
                    right="0"
                    right.collapsed="0"
                    top="0"
                    top.collapsed="0"
                    >
                    <s:stroke>
                        <s:LinearGradientStroke rotation="90"
                            weight="1"
                            >
                            <s:GradientEntry color="0xEAEAEA"
                                />
                            <s:GradientEntry color="0xD9D9D9"
                                />
                        </s:LinearGradientStroke>
                    </s:stroke>
                </s:Rect>

                <!-- layer 2: title bar divider -->
                <!--- @private -->
                <s:Rect id="tbDiv"
                    height="1"
                    bottom="0"
                    left="0"
                    right="0"
                    >
                    <s:fill>
                        <s:SolidColor color="0xC0C0C0"
                            />
                    </s:fill>
                </s:Rect>

                <!-- layer 3: text -->
                <!--- @copy spark.components.Panel#titleDisplay -->
                <s:Label id="titleDisplay"
                    width.collapsed="100%"
                    minHeight="30"
                    bottom="0"
                    bottom.collapsed="0"
                    fontWeight="bold"
                    left.collapsed="2"
                    left.disabled="9"
                    left.disabledWithControlBar="9"
                    left.normal="9"
                    left.normalWithControlBar="9"
                    right.disabled="3"
                    right.disabledWithControlBar="3"
                    right.normal="3"
                    right.normalWithControlBar="3"
                    top="1"
                    top.collapsed="1"
                    verticalAlign="middle"
                    maxDisplayedLines="1"
                    rotation.collapsed="90"
                    >
                </s:Label>
            </s:Group>

            <!--
            Note: setting the minimum size to 0 here so that changes to the host component's
            size will not be thwarted by this skin part's minimum size.   This is a compromise,
            more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
            -->
            <!--- @copy spark.components.SkinnableContainer#contentGroup -->
            <s:Group id="contentGroup"
                width="100%"
                height="100%"
                minHeight="0"
                minWidth="0"
                includeIn="disabled,disabledWithControlBar,normal,normalWithControlBar"
                >
            </s:Group>

            <!--- @private -->
            <s:Group id="bottomGroup"
                minHeight="0"
                minWidth="0"
                includeIn="normalWithControlBar, disabledWithControlBar"
                >

                <!-- layer 3: control bar -->
                <!--- @copy spark.components.Panel#controlBarGroup -->
                <s:Group id="controlBarGroup"
                    minHeight="0"
                    minWidth="0"
                    bottom="1"
                    left="0"
                    right="0"
                    top="1"
                    >
                    <s:layout>
                        <s:HorizontalLayout horizontalAlign="center"
                            paddingBottom="7"
                            paddingLeft="10"
                            paddingRight="10"
                            paddingTop="7"
                            gap="10"
                            />
                    </s:layout>
                </s:Group>
            </s:Group>
        </s:Group>
    </s:Group>
    <s:Group width="10"
        height="10"
        right="1"
        verticalCenter="0"
        click="arrowClicked(event)"
        >
        <s:Rect width="100%"
            height="100%"
            >
            <s:fill>
                <s:SolidColor color="0xC0C0C0"
                    color.collapsed="0xFFC0C0"
                    />
            </s:fill>
        </s:Rect>
    </s:Group>

</s:SparkSkin>
